<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robert Lewandowski</title>
    <link>https://rl89pl.github.io/pl/</link>
    <description>Recent content on Robert Lewandowski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <managingEditor>rl89pl@gmail.com (Robert Lewandowski)</managingEditor>
    <webMaster>rl89pl@gmail.com (Robert Lewandowski)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 06 Feb 2022 00:45:00 +0200</lastBuildDate>
    
        <atom:link href="https://rl89pl.github.io/pl/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>ToDo APP - opis projektu</title>
        <link>https://rl89pl.github.io/pl/posts/todo_0/</link>
        <pubDate>Sun, 06 Feb 2022 00:45:00 +0200</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/todo_0/</guid>
        <description>Dostępne aplikacje Używałem wielu aplikacji do planowania zadań i jeszcze więcej testowałem.
Przykładowo w każdej można utworzyć listę zadań, np.:
 Zakup słuchawek Trening Sprzątanie piwnicy  W wielu z nich można także ustalić ile dane zadanie zajmie nam czasu i na podstawie tego planować dzień.
Problem i rozwiązanie Nie przypominam sobie jednak, by jakakolwiek z nich miała opcję predefiniowanych podzadań.
Oczywiście wiele z nich miało możliwość dodawania podzadań, ale trzeba je uzupełniać za każdym razem, gdy dodaje się główne zadanie.</description>
      </item>
      
      <item>
        <title>Django - Quick Tips - Templatetags</title>
        <link>https://rl89pl.github.io/pl/posts/django_tips_0/</link>
        <pubDate>Sat, 16 Oct 2021 00:00:10 +0200</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/django_tips_0/</guid>
        <description>Django - Quick Tips Rozpoczynam nową serię z drobnymi poradami dotyczącymi Django.
Na początek serii napiszę i omówię dość przydatny templatetag, który ułatwi pracę z paginacją i różnym filtrowaniem/sortowaniem na stronie.
Problem
Na stronie masz paginator, a także sortowanie, bądź filtrowanie treści. Klikasz, by filtrować treść i chcesz przejść na kolejną stronę, a tu&amp;hellip; jesteś co prawda na kolejnej stronie, ale bez wybranego filtrowania.
Template Tag Przygotowanie
W folderze aplikacji django, gdzie są pliki m.</description>
      </item>
      
      <item>
        <title>Hackyeah</title>
        <link>https://rl89pl.github.io/pl/posts/hackyeah/</link>
        <pubDate>Sun, 14 Jun 2020 00:07:53 +0200</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/hackyeah/</guid>
        <description>Hackyeah Summer June Edition Brałem udział w kolejnej edycji jednego z największych hackathonów w Europie.
Samodzielnie rozpocząłem projekt na tyle według mnie ciekawy, że postanowiłem go kontynuować już po zakończeniu tego hackathonu.
Projekt Ogólne zasady:</description>
      </item>
      
      <item>
        <title>Automatyzacja projektow</title>
        <link>https://rl89pl.github.io/pl/posts/automatyzacja_projektow/</link>
        <pubDate>Sun, 19 Jan 2020 01:55:00 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/automatyzacja_projektow/</guid>
        <description>Wprowadzenie Trzeba szanować swój czas i w miarę możliwości automatyzować wszystko, co jest uciążliwe, monotonne, często powtarzalne. Postanowiłem ułatwić sobie pracę przy tworzeniu nowego projektu, a także szybkie rozpoczęcie pisania nawet testowego skryptu.
Przy tworzeniu projektu musiałbym wpierw utworzyć odpowiedni folder, zalogować się na github.com w celu utworzenia repozytorium, zainicjowanie go, utworzenie pliku README i przesłanie na platformę github. Dodatkowo utworzenie pustego pliku python i uruchomienie VS Code.
Trochę to czasu zajmuje, a gdyby to wszystko zastąpić wyłącznie komendą w cmd, lub powershell w formie komendy z dowolnego miejsca w systemie?</description>
      </item>
      
      <item>
        <title>Car manager - wersja konsolowa cz.1</title>
        <link>https://rl89pl.github.io/pl/posts/wersja_konsolowa/</link>
        <pubDate>Tue, 14 Jan 2020 16:38:49 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/wersja_konsolowa/</guid>
        <description>Wprowadzenie ganttsection Car ManagerSkrypt + baza danych :active, des1, 2020-01-14,2020-01-16Django : des2, after des1, 2dDesktop app : des3, after des2, 2dMobile app : des4, after des3, 2dCzas na rozpoczęcie pracy nad pierwszą wersją aplikacji, wpierw konsolowej napisanej w Pythonie.
Baza danych w prostym SQlite.
Repozytorium projektu: Car Manager
Praca z bazą danych Przy uruchamianiu programu chcemy, aby pokazał się aktualny stan pojazdu.
Czyli w pierwszej kolejności musimy odczytać z bazy danych interesujące nas tabele, a jeśli jej nie ma, to utworzyć nową bazę.</description>
      </item>
      
      <item>
        <title>Projekt - Car Manager</title>
        <link>https://rl89pl.github.io/pl/posts/car_manager/</link>
        <pubDate>Fri, 10 Jan 2020 02:13:55 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/car_manager/</guid>
        <description>Wprowadzenie Kiedyś używałem aplikacji do kontrolowania budżetu związanej z użytkowaniem auta. Bardzo praktyczne aplikacje pozwalały mi na zapisywanie przebytych tras i tankowań, dzięki czemu wiedziałem jakie koszty ponoszę miesięcznie.
Niestety, aplikacje których używałem posiadają również wady. Gdy przez ok rok nie używałem aplikacji i do niej powróciłem, po wprowadzeniu danych odnośnie tankowania, wskazywało błędne dane w postaci 10 000 km do następnego tankowania, etc.
Postanowiłem stworzyć własną aplikację tego typu dla własnego użytku.</description>
      </item>
      
      <item>
        <title>Hasła do wifi</title>
        <link>https://rl89pl.github.io/pl/notes/wifi_pswd/</link>
        <pubDate>Sun, 05 Jan 2020 23:42:30 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/notes/wifi_pswd/</guid>
        <description>Zdarza się, że potrzebujemy hasło do sieci wifi, do której się wcześniej logowaliśmy, by móc zalogować się np. w telefonie, ale nie pamiętamy hasła.
Rozwiązanie pod Windowsa jest bardzo proste. Jedyne czego potrzebujemy to cmd.
W terminalu wpisujemy poniższe polecenie:
netsh wlan show profilesOtrzymamy listę zapisanych sieci:
Następnie wpisujemy poniższe polecenie, gdzie zamiast NAZWA_SIECI podajemy interesującą nas sieć:
netsh wlan show profiles name=NAZWA_SIECI key=clearNasze hasło zapisane jest pod Key Content:</description>
      </item>
      
      <item>
        <title>IP mojego RaspberryPi</title>
        <link>https://rl89pl.github.io/pl/posts/raspberry_ip/</link>
        <pubDate>Sun, 05 Jan 2020 00:34:30 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/raspberry_ip/</guid>
        <description>Moje Raspberry automatycznie po uruchomieniu łączy się z VPN. Bez statycznego IP, ciężko jest wyszukać adres urządzenia, gdy nieoczekiwanie nastąpi restart, albo chwilowe rozłączenie z siecią. Jednym z wielu rozwiązań, będzie automat wysyłający SMSem swój adres IP. Dzięki takiemu rozwiązaniu mogę z każdego miejsca na ziemi połączyć się z moim Raspberry, nie zastanawiając się jakie ma IP.
Potrzebne biblioteki By sprawdzić IP potrzebna jest biblioteka netifaces, a do wysyłania SMSów najlepszą opcją będzie Nexmo</description>
      </item>
      
      <item>
        <title>Markdown do Worda</title>
        <link>https://rl89pl.github.io/pl/notes/md2word/</link>
        <pubDate>Sat, 04 Jan 2020 01:28:26 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/notes/md2word/</guid>
        <description>By móc generować dokumenty Worda z MD, należy pobrać pandoc (LINUX).
W terminalu wpisujemy poniższe polecenie:
1  pandoc -o output.docx -f markdown -t docx filename.md   </description>
      </item>
      
      <item>
        <title>O mnie</title>
        <link>https://rl89pl.github.io/pl/about/</link>
        <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/about/</guid>
        <description>To miejsce czeka na uzupełnienie.
Link do GH GitHub.</description>
      </item>
      
      <item>
        <title>Mój pierwszy wpis</title>
        <link>https://rl89pl.github.io/pl/posts/pierwszy_wpis/</link>
        <pubDate>Sat, 04 Jan 2020 00:01:57 +0100</pubDate>
        <author>rl89pl@gmail.com (Robert Lewandowski)</author>
        <guid>https://rl89pl.github.io/pl/posts/pierwszy_wpis/</guid>
        <description>Wpisy na blogu mają posłużyć w przyszłości za swoistą bazę wiedzy. Nie oczekuję, że ktokolwiek poza mną to będzie czytał, ale jeśli z jakiegoś powodu znajdzie się jakiś czytelnik, to serdecznie witam :)
Dział notatek jest dla szybkich wpisów, by zapisać sobie rozwiązanie, które kiedyś może się przydać.
 &amp;ldquo;Gdybym miał osiem godzin na ścięcie drzewa, spędziłbym sześć na ostrzeniu siekiery” - Abraham Lincoln
  &amp;ldquo;Kto nie ma pamięci, ten niech ją sobie stworzy na papierze.</description>
      </item>
      
    
  </channel>
</rss>